{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA0CA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SACNN,E,MACAC,IAGFM,EAAO,C,SACLP,E,MACAC,GACA,GAEHA,EAAM,G,CAvDEQ,SAASC,cAAc,QAK/BC,iBAAiB,UAGJ,SAAEC,GACpBA,EAAIC,iBACJ,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAQ,EAAGA,EAAQH,EAAII,OAAOC,SAASC,OAAQH,IAAS,CAC/D,MAAMI,EAAOP,EAAII,OAAOC,SAASF,GACX,UAAlBI,EAAKC,WACPN,EAASK,EAAKE,OAASF,EAAKG,M,EAOE,SAAbA,GACrB,MAAQrB,MAAAsB,EAAKC,OAAEA,EAAMC,KAAEA,GAASH,EAChC,IAAK,IAAII,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAE/B3B,EAAc2B,EAAI,EADDH,EAAQG,EAAID,GAE1BE,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjB2B,EAAA/B,GAASgC,OAAOC,QACd,uBAAqB9B,QAAiBC,MAAU,IAGnD8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClB2B,EAAA/B,GAASgC,OAAOG,QACd,sBAAoBhC,QAAiBC,MAAU,G,EAhBvDgC,CAAcnB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\n// const delayFormEl = document.querySelector('[name=\"delay\"]');\n// const stepFormEl = document.querySelector('[name=\"step\"]');\n// const amauntFormEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\n//собирает данные с формы\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const userData = {};\n  for (let index = 0; index < evt.target.elements.length; index++) {\n    const elem = evt.target.elements[index];\n    if (elem.nodeName === 'INPUT') {\n      userData[elem.name] = +elem.value;\n    }\n  }\n  makeSamPromis(userData);\n}\n\n//принимает данные с формы и создает промисы\nfunction makeSamPromis(value) {\n  const { delay, amount, step } = value;\n  for (let i = 0; i < amount; i++) {\n    const newDelay = delay + i * step;\n    createPromise(i + 1, newDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\n// делает один промис\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","userData","index","target","elements","length","elem","nodeName","name","value","delay1","amount","step","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$makeSamPromis"],"version":3,"file":"03-promises.f9af139d.js.map"}