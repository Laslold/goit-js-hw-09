{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA0CA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CACNN,WACAC,UAGFM,EAAO,CACLP,WACAC,S,GAGHA,E,IAvDQQ,SAASC,cAAc,QAK/BC,iBAAiB,UAGJ,SAAEC,GACpBA,EAAIC,iBAEJ,IADA,IAAMC,EAAW,GACRC,EAAQ,EAAGA,EAAQH,EAAII,OAAOC,SAASC,OAAQH,IAAS,CAC/D,IAAMI,EAAOP,EAAII,OAAOC,SAASF,GACX,UAAlBI,EAAKC,WACPN,EAASK,EAAKE,OAASF,EAAKG,M,EAOE,SAAbA,GAErB,IADA,IAAQC,EAAwBD,EAAxBrB,MAAOuB,EAAiBF,EAAjBE,OAAQC,EAASH,EAATG,KACdC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAE/B3B,EAAc2B,EAAI,EADDH,EAAQG,EAAID,GAE1BE,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjDgC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,EAAAhC,GAASiC,OAAOI,QACd,sBAAuCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,KAhBrDkC,CAAcrB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\n// const delayFormEl = document.querySelector('[name=\"delay\"]');\n// const stepFormEl = document.querySelector('[name=\"step\"]');\n// const amauntFormEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\n//собирает данные с формы\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const userData = {};\n  for (let index = 0; index < evt.target.elements.length; index++) {\n    const elem = evt.target.elements[index];\n    if (elem.nodeName === 'INPUT') {\n      userData[elem.name] = +elem.value;\n    }\n  }\n  makeSamPromis(userData);\n}\n\n//принимает данные с формы и создает промисы\nfunction makeSamPromis(value) {\n  const { delay, amount, step } = value;\n  for (let i = 0; i < amount; i++) {\n    const newDelay = delay + i * step;\n    createPromise(i + 1, newDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\n// делает один промис\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","userData","index","target","elements","length","elem","nodeName","name","value","delay1","amount","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$makeSamPromis"],"version":3,"file":"03-promises.6d68f46a.js.map"}